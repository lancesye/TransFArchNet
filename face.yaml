hydra:
  run:
    dir: '.'  # 设置输出目录为当前工作目录
    
optimizer: {
  type: AdamW,
  kwargs: {
  lr: 0.001,
  weight_decay: 0.05}}

scheduler: {
  type: CosLR,
  kwargs: {
    epochs: 400,
    initial_epochs: 10}}

dataset: {
  train: { _base_: cfgs/dataset/ShapeNet-55.yaml,
            others: {subset: 'train', npoints: 2048}},
  val: { _base_: cfgs/dataset/ShapeNet-55.yaml,
            others: {subset: 'test', npoints: 2048}},
  test: { _base_: cfgs/dataset/ShapeNet-55.yaml,
            others: {subset: 'test', npoints: 2048}},
  svm: {
          train: { _base_: cfgs/dataset/ModelNet40_SVM.yaml,
                    others: {partition: 'train', num_points: 1024}},
          val: { _base_: cfgs/dataset/ModelNet40_SVM.yaml,
                    others: {partition: 'test', num_points: 1024}},
          test: { _base_: cfgs/dataset/ModelNet40_SVM.yaml,
                    others: {partition: 'test', num_points: 1024}}}
          }

model: {
  NAME: TransArchNet,
  # tokenizers
  group_sizes: [32, 16, 16], 
  num_groups: [1024, 512, 128],
  # hierarchical encoder
  encoder_depths: [5, 5, 5],
  encoder_dims: [96, 192, 384],
  # encoder_dims: [192, 192, 384],
  local_radius: [0.32, 0.64, 1.28],  # disabled for pre-training
  # hierarchical decoder
  decoder_depths: [1, 1],
  decoder_dims: [384, 192],
  decoder_up_blocks: [1, 1],
  # others
  drop_path_rate: 0.1,
  num_heads: 6,}

npoints: 10000
total_bs: 2
step_per_update: 1
max_epoch: 300
